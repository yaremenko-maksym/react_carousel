{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","state","counter","scrollRight","setState","prevState","props","images","step","infinite","frameSize","bigger","smaller","length","scrollLeft","this","itemWidth","animationDuration","className","style","width","transition","transform","map","image","i","src","alt","height","type","onClick","React","Component","Form","submitFuction","method","name","min","max","placeholder","defaultValue","required","onChange","value","App","submitChanges","event","target","flag","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6a96aba.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport './Carousel.scss';\nimport { Sizes } from '../../types/Sizes';\n\ntype Props = Sizes & {\n  images: string[];\n};\n\ntype State = {\n  counter: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    counter: 0,\n  };\n\n  scrollRight = () => {\n    this.setState((prevState) => {\n      const {\n        images,\n        step,\n        infinite,\n        frameSize,\n      } = this.props;\n\n      let bigger = step;\n      let smaller = frameSize;\n\n      if (frameSize > step) {\n        bigger = frameSize;\n        smaller = step;\n      }\n\n      if (prevState.counter > images.length - (bigger * 2)\n        && prevState.counter <= images.length - bigger) {\n        if (bigger === step) {\n          return { counter: images.length - smaller };\n        }\n\n        return { counter: images.length - bigger };\n      }\n\n      if (prevState.counter >= images.length - smaller\n        && bigger === step) {\n        if (infinite) {\n          return { counter: 0 };\n        }\n\n        return { counter: prevState.counter };\n      }\n\n      if (prevState.counter >= images.length - bigger\n        && bigger === frameSize) {\n        if (infinite) {\n          return { counter: 0 };\n        }\n\n        return { counter: prevState.counter };\n      }\n\n      return { counter: prevState.counter + step };\n    });\n  };\n\n  scrollLeft = () => {\n    this.setState((prevState) => {\n      const {\n        images,\n        step,\n        infinite,\n        frameSize,\n      } = this.props;\n\n      let bigger = step;\n\n      if (frameSize > step) {\n        bigger = frameSize;\n      }\n\n      if (prevState.counter < bigger\n        && prevState.counter > 0) {\n        return { counter: 0 };\n      }\n\n      if (prevState.counter === 0) {\n        if (infinite) {\n          return { counter: images.length - step };\n        }\n\n        return { counter: prevState.counter };\n      }\n\n      return { counter: prevState.counter - step };\n    });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.props;\n    const { counter } = this.state;\n\n    return (\n      <>\n        <div\n          className=\"Carousel\"\n          style={{\n            width: `${itemWidth * frameSize}px`,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transition: `all ${animationDuration}ms`,\n              transform: `translateX(${-itemWidth * counter}px)`,\n              width: `${itemWidth * images.length}px`,\n            }}\n          >\n            {images.map((image, i) => (\n              <li\n                key={image}\n                className=\"Carousel__item\"\n              >\n                <img\n                  src={image}\n                  alt={image[i + 1]}\n                  style={{\n                    width: `${itemWidth}px`,\n                    height: `${100}%`,\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"nav-buttons\">\n          <button\n            type=\"button\"\n            onClick={this.scrollLeft}\n            className=\"button\"\n          >\n            <p className=\"button__text\">LEFT</p>\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.scrollRight}\n            className=\"button\"\n          >\n            <p className=\"button__text\">RIGHT</p>\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Sizes } from '../../types/Sizes';\nimport './Form.scss';\n\ntype Props = Omit<Sizes, 'infinite'> & {\n  images: string[];\n  submitFuction: (event: { target: { name: string; value: string; }; }) => void;\n};\n\nexport const Form: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  submitFuction,\n}) => {\n  return (\n    <form\n      method=\"get\"\n      className=\"form\"\n    >\n      Change properties:\n      <label className=\"form__label\">\n        Item Width (px):\n        <input\n          name=\"itemWidth\"\n          type=\"number\"\n          min=\"100\"\n          max=\"160\"\n          placeholder=\"Images Width (px)\"\n          defaultValue={itemWidth}\n          required\n          className=\"form__input\"\n          onChange={submitFuction}\n        />\n      </label>\n\n      <label className=\"form__label\">\n        Frame Size:\n        <input\n          name=\"frameSize\"\n          type=\"number\"\n          min=\"1\"\n          max={images.length}\n          placeholder=\"Frame Size\"\n          defaultValue={frameSize}\n          required\n          className=\"form__input\"\n          onChange={submitFuction}\n        />\n      </label>\n\n      <label className=\"form__label\">\n        Step:\n        <input\n          name=\"step\"\n          type=\"number\"\n          min=\"1\"\n          max={images.length - frameSize}\n          placeholder=\"Scroll Step\"\n          defaultValue={step}\n          required\n          className=\"form__input\"\n          onChange={submitFuction}\n        />\n      </label>\n\n      <label className=\"form__label\">\n        Animation Duration (ms):\n        <input\n          name=\"animationDuration\"\n          type=\"number\"\n          min=\"0\"\n          max=\"10000\"\n          step=\"100\"\n          placeholder=\"Animation Duration (ms)\"\n          defaultValue={animationDuration}\n          required\n          className=\"form__input\"\n          onChange={submitFuction}\n        />\n      </label>\n\n      <label className=\"form__label\">\n        Infinite:\n        <select\n          name=\"infinite\"\n          required\n          className=\"form__input\"\n          onChange={submitFuction}\n        >\n          <option value=\"false\">False</option>\n          <option value=\"true\">True</option>\n        </select>\n      </label>\n    </form>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport { Form } from './components/Form';\nimport { Sizes } from './types/Sizes';\n\ntype State = Sizes & {\n  images: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  submitChanges = (event: {\n    target: { name: string; value: string; };\n  }) => {\n    const { value } = event.target;\n    const targetName = event.target.name;\n    let flag = false;\n\n    switch (targetName) {\n      case 'itemWidth':\n        this.setState({ itemWidth: +value });\n        break;\n\n      case 'frameSize':\n        this.setState({ frameSize: +value });\n        break;\n\n      case 'step':\n        this.setState({ step: +value });\n        break;\n\n      case 'animationDuration':\n        this.setState({ animationDuration: +value });\n        break;\n\n      case 'infinite':\n\n        if (value === 'true') {\n          flag = true;\n        }\n\n        this.setState({ infinite: flag });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <Form\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          submitFuction={this.submitChanges}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}