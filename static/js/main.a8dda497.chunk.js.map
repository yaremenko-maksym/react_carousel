{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","counter","scrollRight","setState","prevState","props","images","step","infinite","frameSize","length","scrollLeft","this","itemWidth","animationDuration","className","style","width","transition","transform","map","image","i","src","alt","height","type","onClick","React","Component","App","submitChanges","event","preventDefault","value","target","flag","name","method","min","placeholder","defaultValue","required","onChange","max","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8dda497.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport './Carousel.scss';\nimport { Sizes } from '../types/Sizes';\n\ntype Props = Sizes & {\n  images: string[];\n};\n\ntype State = {\n  counter: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    counter: 0,\n  };\n\n  scrollRight = () => {\n    this.setState((prevState) => {\n      const {\n        images,\n        step,\n        infinite,\n        frameSize,\n      } = this.props;\n\n      if (prevState.counter > images.length - step * 2\n        && prevState.counter < images.length - step) {\n        return { counter: images.length - frameSize };\n      }\n\n      if (prevState.counter === images.length - frameSize) {\n        if (infinite) {\n          return { counter: 0 };\n        }\n\n        return { counter: prevState.counter };\n      }\n\n      return { counter: prevState.counter + step };\n    });\n  };\n\n  scrollLeft = () => {\n    this.setState((prevState) => {\n      const { images, step, infinite } = this.props;\n\n      if (prevState.counter < step\n        && prevState.counter > 0) {\n        return { counter: 0 };\n      }\n\n      if (prevState.counter === 0) {\n        if (infinite) {\n          return { counter: images.length - step };\n        }\n\n        return { counter: prevState.counter };\n      }\n\n      return { counter: prevState.counter - step };\n    });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.props;\n    const { counter } = this.state;\n\n    return (\n      <>\n        <div\n          className=\"Carousel\"\n          style={{\n            width: `${itemWidth * frameSize}px`,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transition: `all ${animationDuration}ms`,\n              transform: `translateX(${-itemWidth * counter}px)`,\n              width: `${itemWidth * images.length}px`,\n            }}\n          >\n            {images.map((image, i) => (\n              <li\n                key={image}\n                className=\"Carousel__item\"\n              >\n                <img\n                  src={image}\n                  alt={image[i + 1]}\n                  style={{\n                    width: `${itemWidth}px`,\n                    height: `${100}%`,\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"nav-buttons\">\n          <button\n            type=\"button\"\n            onClick={this.scrollLeft}\n            className=\"button\"\n          >\n            <p className=\"button__text\">LEFT</p>\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.scrollRight}\n            className=\"button\"\n          >\n            <p className=\"button__text\">RIGHT</p>\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport { Sizes } from './types/Sizes';\n\ntype State = Sizes & {\n  images: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  submitChanges = (event: {\n    preventDefault: () => void;\n    target: { name: string; value: string; };\n  }) => {\n    event.preventDefault();\n    const { value } = event.target;\n    const targetName = event.target.name;\n    let flag = false;\n\n    switch (targetName) {\n      case 'itemWidth':\n        this.setState({ itemWidth: +value });\n        break;\n\n      case 'frameSize':\n        this.setState({ frameSize: +value });\n        break;\n\n      case 'step':\n        this.setState({ step: +value });\n        break;\n\n      case 'animationDuration':\n        this.setState({ animationDuration: +value });\n        break;\n\n      case 'infinite':\n\n        if (value === 'true') {\n          flag = true;\n        }\n\n        this.setState({ infinite: flag });\n        break;\n\n      default:\n        this.setState({\n          itemWidth: 130,\n          frameSize: 3,\n          step: 3,\n          animationDuration: 1000,\n          infinite: false,\n        });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"App__title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form\n          method=\"get\"\n          className=\"controlls\"\n        >\n          Change properties:\n          <label>\n            <input\n              name=\"itemWidth\"\n              type=\"number\"\n              min=\"20\"\n              placeholder=\"Images Width (px)\"\n              defaultValue={itemWidth}\n              required\n              className=\"controlls__input\"\n              onChange={this.submitChanges}\n            />\n          </label>\n\n          <label>\n            <input\n              name=\"frameSize\"\n              type=\"number\"\n              min=\"1\"\n              max={images.length}\n              placeholder=\"Frame Size\"\n              defaultValue={frameSize}\n              required\n              className=\"controlls__input\"\n              onChange={this.submitChanges}\n            />\n          </label>\n\n          <label>\n            <input\n              name=\"step\"\n              type=\"number\"\n              min=\"1\"\n              max={images.length}\n              placeholder=\"Scroll Step\"\n              defaultValue={step}\n              required\n              className=\"controlls__input\"\n              onChange={this.submitChanges}\n            />\n          </label>\n\n          <label>\n            <input\n              name=\"animationDuration\"\n              type=\"number\"\n              placeholder=\"Animation Duration (ms)\"\n              defaultValue={animationDuration}\n              required\n              className=\"controlls__input\"\n              onChange={this.submitChanges}\n            />\n          </label>\n\n          <label>\n            <select\n              name=\"infinite\"\n              defaultValue=\"Choose option\"\n              required\n              className=\"controlls__input\"\n              onChange={this.submitChanges}\n            >\n              <option disabled>Choose option</option>\n              <option value=\"true\">True</option>\n              <option value=\"false\">False</option>\n            </select>\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}